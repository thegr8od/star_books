server:
  port: 9097
#  forward-headers-strategy: framework

livekit:
  api:
    key: ${LIVEKIT_REMOVED}
    secret: ${LIVEKIT_API_SECRET}

spring:

  jackson:
    deserialization:
      accept-single-value-as-array: true
      accept-empty-string-as-null-object: true
    serialization:
      write-dates-as-timestamps: true
    default-property-inclusion: non_null
    time-zone: Asia/Seoul

  mail:
    host: smtp.gmail.com
    port: 587
    username: ehdgus9370@gmail.com           # 본인의 구글 이메일로 변경
    password: ${SMTP_PASSWORD}      # 앱 비밀번호로 변경
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true

  config:
    activate:
      on-profile: prod
  datasource:
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 30000
      max-lifetime: 1800000
      connection-init-sql: SET time_zone = 'Asia/Seoul'


  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: false
    properties:
      hibernate.format_sql: true
      dialect: org.hibernate.dialect.MySQL8InnoDBDialect
      hibernate.id.new_generator_mappings: false

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - profile
              - email
            redirect-uri: "https://starbooks.site/login/oauth2/code/google"
            authorization-grant-type: authorization_code
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            scope:
              - name
              - email
            redirect-uri: "https://starbooks.site/login/oauth2/code/naver"
            authorization-grant-type: authorization_code
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response


  data:
    redis:
      host: localhost
      port: 6379
      password: ${REDIS_PASSWORD}

#springdoc:
#  swagger-ui:
#    enabled: true
#    path: /swagger-ui.html
#  api-docs:
#    enabled: true
#    path: /v3/api-doc

openai:
  api:
    key: ${OPENAI_REMOVED}

jwt:
  secret: ${JWT_SECRET_KEY}
  accessToken-expiration: 180000
  refreshToken-expiration: 1209600000
  oauth-sign-up-expiration: 600000

cloud:
  aws:
    credentials:
      accessKey: ${AWS_CLOUD_ACCESS_KEY}
      secretKey: ${AWS_CLOUD_SECRET_KEY}
    s3:
      bucket: starbooks
    region:
      static: ap-northeast-2

anthropic:
  api:
    key: ${ANTHROPIC_REMOVED}

logging:
  level:
    org.hibernate.SQL: off

file:
  upload-dir: uploads/
